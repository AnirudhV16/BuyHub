services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: ecommerce-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_NAME:-ecommerce}
      #MYSQL_USER: ${DB_USERNAME:-ecommerce_user}
      #MYSQL_PASSWORD: ${DB_PASSWORD:-userpassword}
    ports:
      - "3307:3306"  # Map to 3307 to avoid conflicts with local MySQL
    volumes:
      - mysql_data:/var/lib/mysql
      # - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Optional: initial schema
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Spring Boot Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ecommerce-app
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      # Database
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ${DB_NAME:-ecommerce}
      DB_USERNAME: ${DB_USERNAME:-ecommerce_user}
      DB_PASSWORD: ${DB_PASSWORD:-userpassword}
      
      # JPA Settings
      JPA_DDL_AUTO: update
      SHOW_SQL: false
      
      # External APIs (these should be in .env file)
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
      RAZORPAY_KEY_ID: ${RAZORPAY_KEY_ID}
      RAZORPAY_KEY_SECRET: ${RAZORPAY_KEY_SECRET}
      JWT_SECRET: ${JWT_SECRET:-myVerySecureSecretKey}
    ports:
      - "8081:8081"
    networks:
      - ecommerce-network
    volumes:
      - app_logs:/app/logs

volumes:
  mysql_data:
  app_logs:

networks:
  ecommerce-network:
    driver: bridge